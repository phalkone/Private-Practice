<% content_for :styles do %>
<%= stylesheet_link_tag "jquery/jquery.ui.all" %>
<% end %>
<% content_for :scripts do %>
<%= javascript_include_tag "jquery-ui/jquery.ui.core.min.js" %>
<%= javascript_include_tag "jquery-ui/jquery.ui.widget.min.js" %>
<%= javascript_include_tag "jquery-ui/jquery.ui.datepicker.min.js" %>
<%= javascript_include_tag "jquery-ui/jquery.ui.datepicker-nl.js" %>
<%= javascript_include_tag "jquery-ui/jquery.ui.datepicker-en.js" %>
<%= javascript_include_tag "jquery-ui/jquery.ui.datepicker-fr.js" %>
<%= javascript_include_tag "jquery-ui/jquery.ui.mouse.min.js" %>
<%= javascript_include_tag "jquery-ui/jquery.ui.slider.min.js" %>
<%= javascript_include_tag "jquery-ui/jquery.ui.button.min.js" %>
<%= javascript_include_tag "jquery-ui/jquery.bgiframe-2.1.1.js" %>
<%= javascript_include_tag "jquery-ui/jquery.ui.draggable.min.js" %>
<%= javascript_include_tag "jquery-ui/jquery.ui.position.min.js" %>
<%= javascript_include_tag "jquery-ui/jquery.ui.resizable.min.js" %>
<%= javascript_include_tag "jquery-ui/jquery.ui.dialog.min.js" %>
<script type="text/javascript">
$(document).ready(function() {
  $("#datepicker").datepicker($.datepicker.regional[ "<%= I18n.locale %>" ])	.change(function() {
	writeCookie("date", $(this).datepicker("getDate").getTime(), 20 * 365);
	refresh(true);
  });

  var cookieDate = getCookie("date");
  if(cookieDate){
	var date = new Date();
	date.setTime(cookieDate);
	$("#datepicker").datepicker( "setDate" , date);
   }
  
  var cookieStartStop = getCookie("start_stop");
  if(cookieStartStop){
	var splitValue =  cookieStartStop.split("*");
	var start = splitValue[0];
	var stop = splitValue[1];
  } else {
	var start = 9;
	var stop = 17
  }
  $("#slider-range").slider({
      range: true, min: 0, max: 24, values: [start, stop],
      slide: function(event, ui) {
        $("#hourrange").html(ui.values[0] 
        + ':00 <span class="button icon-blank ui-icon-arrowthick-1-e"></span> ' + ui.values[1] + ':00');
     },
     change: function(event,ui) {
	    writeCookie("start_stop",ui.values[0].toString() + '*' + ui.values[1], 20 * 365);
		refresh(true);
	 }
  });
  $("#hourrange").html($("#slider-range").slider("values", 0) 
  + ':00 <span class="button icon-blank ui-icon-arrowthick-1-e"></span> ' + $("#slider-range").slider("values", 1) + ':00');

  $("#dayweek").buttonset().css("float","right").change(function(){
	writeCookie("day_week",$("#dayweek input:checked").val(), 20 * 365);
	refresh(true);
  });
  var day_week = getCookie("day_week");
  if(day_week){
	$("#view_dayweek_"+day_week).attr("checked","checked");
	$("#dayweek").buttonset("refresh");
  }

  $("#view_weekend").button().change(function(){
	writeCookie("weekend",$(this).attr("checked"), 20 * 365);
	refresh(true);
  });
  if(getCookie("weekend") == "true" ){
	$("#view_weekend").attr("checked","checked");
	$("#view_weekend").button("refresh");
   } else if(getCookie("weekend") == "false") {
	$("#view_weekend").removeAttr("checked");
	$("#view_weekend").button("refresh");
   }

  $("a.newapp").button(	{
	            icons: { primary: "ui-icon-plusthick" },
	            text: false
	   });

  $("#previous").button({
    icons: {
      primary: "ui-icon-circle-triangle-w"
    },
    text: false
  }).click(function() {
    var presDate = new Date($("#datepicker").datepicker("getDate"));
    var prevDate = presDate.getTime() - (60 * 60 * 24 * 1000);
    if($("#view_dayweek_week").attr("checked")){
      var prevDate = presDate.getTime() - (60 * 60 * 24 * 7 * 1000);
    } else {
      var prevDate = presDate.getTime() - (60 * 60 * 24 * 1000);
    }
    $("#datepicker").datepicker( "setDate" , new Date(prevDate));
	refresh(true);
  });
  $("#next").button({
    icons: {
      primary: "ui-icon-circle-triangle-e"
    },
    text: false
  }).css("float","right").click(function() {
    var presDate = new Date($("#datepicker").datepicker("getDate"));
    if($("#view_dayweek_week").attr("checked")){
      var nextDate = presDate.getTime() + (60 * 60 * 24 * 7 * 1000);
    } else {
      var nextDate = presDate.getTime() + (60 * 60 * 24 * 1000);
    }
    $("#datepicker").datepicker( "setDate" , new Date(nextDate));
    refresh(true);
  });
  $("#refresh").button({
    icons: {
      primary: "ui-icon-refresh"
    },
    text: false
  }).css("float","right").click(function() {
    refresh(true);
  });
  refresh(true);
});

function setBars(){
  $("div.bar").css('height',function(){
    var height = $(this).parent().height();
    return height + "px";
  });

  $("div.bar2").css('margin-top',function(){
    var top = $(this).css('margin-top').substring(0,$(this).css('margin-top').length-2);
    var height = $(this).parent().height();
    var total = $(this).parent().parent().attr("rowspan")*15; 
    return Math.round((top/total)*height) + "px";
  });
  
  $("div.bar2").css('height',function(){
    var dur = $(this).css('height').substring(0,$(this).css('height').length-2);
    var height = $(this).parent().height();
    var total = $(this).parent().parent().attr("rowspan")*15;
    return Math.round((dur/total)*height) + "px";
  });
}

function refresh(viewChanged){
	if($("#dayweek input:checked").val() == "week"){
		var beginTime = beginningOfWeek($("#datepicker").datepicker("getDate"));
		var endTime = endOfWeek($("#datepicker").datepicker("getDate"));
		if(viewChanged){
			drawWeekGrid(beginTime);
		} else {
			clearCalendar();
		}
		if(!$("#view_weekend").attr("checked")){
			endTime = new Date(endTime.getTime() - (60 * 60 * 24 * 2 * 1000));
		}	
		fetchAndDisplayWeek( Math.round(beginTime.getTime() / 1000),Math.round(endTime.getTime() / 1000));
	} else {
		if(viewChanged){
			drawDayGrid(beginTime);
		} else {
			clearCalendar();
		}
		var beginTime = $("#datepicker").datepicker("getDate");
		beginTime.setHours($("#slider-range").slider("values", 0));
		var endTime = $("#datepicker").datepicker("getDate");
		endTime.setHours($("#slider-range").slider("values", 1));
		fetchAndDisplayDay(Math.round(beginTime.getTime() / 1000),Math.round((endTime.getTime() - 1000) / 1000));
	}
	
}

function clearCalendar(){
	$(".booked, .unbooked, .empty").remove();
}

function drawDayGrid(){
	$("#calendar table").remove();
	var dayNames = <%= raw t("txt.day_names") %>;
	var monthNames = <%= raw t("txt.month_names") %>;
	var presDate = $("#datepicker").datepicker("getDate");
	if(presDate.getDay() == 0){
		var day = 6;
	} else {
		var day = presDate.getDay() - 1;
	}
	var table = $("<table/>").addClass("day").appendTo("#calendar");
	table.append("<thead/>");
	$("<tr />").appendTo(".day thead");
	var dateString = dayNames[day] + ", " + presDate.getDate().toString() + " " + monthNames[presDate.getMonth()] + " " + presDate.getFullYear().toString();
	$("<th />").attr("colspan","2").html(dateString).appendTo(".day thead tr");
	table.append("<tbody/>");
		
	var start = $("#slider-range").slider("values", 0);
	var stop = $("#slider-range").slider("values", 1);
	
	for(var i = 0; i < ((stop-start)*4); i++){
		$("<tr />").addClass(i.toString()).appendTo(".day tbody");
		if ((i % 4) == 0){
			var hour = i/4 + start;
			if(hour.toString().length < 2){
				hour = "0" + hour.toString();
			} else {
				hour = hour.toString();
			}
			$("<td />").attr("rowspan","4").addClass("hour").html("<span class='big'>"+ hour +"</span><span class='superscript'>00</span>").appendTo(".day tbody tr:last");
		}
	}
	
}

function fetchAndDisplayDay(start_time,end_time){
	$("<td/>").addClass("empty").appendTo(".day tbody tr");
	var start =  $("#slider-range").slider("values", 0);
	var stop = $("#slider-range").slider("values", 1);
	var booked = 0;
	var unbooked = 0;
	var maxlength = 1;
	var previousbegincell = null;
	var previousendcell = null;
	var currentlength = 0;
	var begincell = null;
	$.getJSON('/appointments.json',{begintime: start_time, endtime: end_time}, function(data) {
	$.each(data, function(i,app){
		var begintime = new Date(app.begin);
		var endtime = new Date(app.end);
		var time = formatTime(begintime);
		var time2 = formatTime(endtime);
		if(app.patient_id != null){
			if(endCell(begintime,endtime,start) > (((stop-start)*4)-1)){
				return false;
			}
			booked++;
			var begincell = beginCell(begintime,start);
			var row = "."+ begincell.toString();
			var rowspan = rowSpan(begintime,endtime);
			var name = app.patient.last_name + ", " + app.patient.first_name;
			$("<td/>").addClass("booked").attr("rowspan",rowspan.toString()).html("<div class='bar'><div class='bar2' style='margin-top:" + top(begintime) + "px;height:" + duration(begintime, endtime) + "px;'></div></div>" + time + "-" + time2 +" <span class='red'>" + name + "</span>").click(function() {
				$.get("/appointments/"+app.id.toString());
			}).appendTo(row);
			for(var j = begincell; j < (begincell + rowspan); j++ ){
				$("." + j.toString() + " td.empty").remove();
			}
			if((previousbegincell != begincell) && (previousbegincell != null)){
				if((previousendcell == begincell) && (currentlength == 1)){
					currentlength = 2;
				}
				if(currentlength > maxlength){
					maxlength = currentlength;
				}
				$("tr." + previousbegincell.toString()).children(".booked, .unbooked").attr("colspan",currentlength.toString());
				currentlength = 0;
			}
			if((previousendcell == begincell) && (previousbegincell != begincell)) {
				currentlength += 2;
			} else {
				currentlength += 1;
			}
			previousbegincell = begincell;
			previousendcell = begincell + rowspan - 1;
		} else {
			var newend = new Date(begintime.getTime() + (app.split * 60 * 1000));
			if((app.split == null) || (app.split == 0) || (newend >= endtime)){
				if(endCell(begintime,endtime,start) > (((stop-start)*4)-1)){
					return false;
				}
				unbooked++;
				var begincell = beginCell(begintime,start);
				var row = "."+ begincell.toString();
				var rowspan = rowSpan(begintime,endtime);
				var td = $("<td/>").addClass("unbooked").attr("rowspan",rowspan.toString()).html("<div class='bar'><div class='bar2' style='margin-top:" + top(begintime) + "px;height:" + duration(begintime, endtime) + "px;'></div></div>" + time + "-" + time2 + " ").click(function(e) {
					  if((e.target == "[object HTMLTableCellElement]") || (e.target == "[object HTMLDivElement]")){
						$.get("/appointments/"+app.id.toString());
					}
				}).appendTo(row);
				$("<a/>").html("<%= t("appointments.book_now").upcase %>").attr({
					"data-remote": true,
					href: "/appointments/"+app.id.toString()+"/edit?mode=registered"
				}).appendTo(td);
				for(var j = begincell; j < (begincell + rowspan); j++ ){
					$("." + j.toString() + " td.empty").remove();
				}
				if((previousbegincell != begincell) && (previousbegincell != null)){
					if((previousendcell == begincell) && (currentlength == 1)){
						currentlength = 2;
					}
					if(currentlength > maxlength){
						maxlength = currentlength;
					}
					$("tr." + previousbegincell.toString()).children(".booked, .unbooked").attr("colspan",currentlength.toString());
					currentlength = 0;
				}
				if((previousendcell == begincell) && (previousbegincell != begincell)) {
					currentlength += 2;
				} else {
					currentlength += 1;
				}
				previousbegincell = begincell;
				previousendcell = begincell + rowspan - 1;
			} else {
				var i = 0;
				var newbegin = new Date(begintime);
				while(newend <= endtime){
					if(endCell(newbegin,newend) > (((stop-start)*4)-1)){
						return false;
					}
					unbooked++;
					var time_begin = formatTime(newbegin);
					var time_end = formatTime(newend);
					var date_begin = newbegin.getUTCDate().toString() +"/"+ (newend.getUTCMonth()+1).toString() +"/"+ newbegin.getUTCFullYear().toString();
					var begincell = beginCell(newbegin,start);
					var row = "."+ begincell.toString();
					var rowspan = rowSpan(newbegin,newend);
					var td = $("<td/>").addClass("unbooked").attr("rowspan",rowspan.toString()).html("<div class='bar'><div class='bar2' style='margin-top:" + top(newbegin) + "px;height:" + duration(newbegin, newend) + "px;'></div></div>" + time_begin + "-" + time_end + " ").click(function(e) {
					    if((e.target == "[object HTMLTableCellElement]") || (e.target == "[object HTMLDivElement]")){
					      $.get($(this).children("a:first").attr("href"));
					      return false;
					    }
					 }).appendTo(row);
					$("<a/>").addClass("hidden").attr({
						"data-remote": true,
						href: "/appointments/"+app.id.toString() + "?sub_id=" + i.toString()
					}).appendTo(td);
					$("<a/>").html("<%= t("appointments.book_now").upcase %>").attr({
						"data-remote": true,
						href: "/appointments/new?appointment[begin_time]=" + time_begin + "&appointment[end_time]=" + time_end + "&appointment[date]=" + date_begin
					}).appendTo(td);
					for(var j = begincell; j < (begincell + rowspan); j++ ){
						$("." + j.toString() + " td.empty").remove();
					}
					if((previousbegincell != begincell) && (previousbegincell != null)){
						if((previousendcell == begincell) && (currentlength == 1)){
							currentlength = 2;
						}
						if(currentlength > maxlength){
							maxlength = currentlength;
						}
						$("tr." + previousbegincell.toString()).children(".booked, .unbooked").attr("colspan",currentlength.toString());
						currentlength = 0;
					}
					if((previousendcell == begincell) && (previousbegincell != begincell)) {
						currentlength += 2;
					} else {
						currentlength += 1;
					}
					previousbegincell = begincell;
					previousendcell = begincell + rowspan - 1;

					i++;
					newbegin = $.advance(newbegin,app.split);
					newend = $.advance(newend,app.split);

					if((newend > endtime) && (newbegin < endtime)){
						newend = endtime;
					}
				}
			}
		}
	});
	if((previousbegincell != begincell) && (previousbegincell != null)){
		if(currentlength > maxlength){
			maxlength = currentlength;
		}
		$("tr." + previousbegincell.toString()).children(".booked, .unbooked").attr("colspan",currentlength.toString());
		currentlength = 0;
	}
	if((previousendcell == begincell) && (previousbegincell != begincell)) {
		currentlength += 2;
	} else {
		currentlength += 1;
	}
	updateBookedCount(booked,unbooked);
	maxlength = maxlength * 60;
	$(".booked, .unbooked").attr("colspan",function(){
		return maxlength/$(this).attr("colspan");
	});
	$(".empty").attr("colspan",maxlength.toString());
	$(".day thead tr th").attr("colspan", maxlength+1);
	setBars();
  });
  
}

function top(beginTime){
	return beginTime.getUTCMinutes() % 15;
}

function rowSpan(beginTime, endTime){
  var duration = Math.round((endTime.getTime() - beginTime.getTime())/1000);
  var a = 15 - top(beginTime);
  var dur = parseInt(((duration - (a*60))/900));
  if ((duration - (a*60)) <= 0){
    dur = 1;
  } else if ( ((duration - (a*60)) % 900) != 0){
    dur += 2;
  } else {
    dur += 1
  }
  return dur
}

function duration(beginTime, endTime){
	return Math.round((endTime.getTime() - beginTime.getTime())/60000);
}

function beginCell(beginTime,start){
  	var min = (beginTime.getUTCMinutes() - (beginTime.getUTCMinutes() % 15))/15;
  	return (min + ((beginTime.getUTCHours()-start)*4));
}

function endCell(beginTime,endTime,start){
  return (beginCell(beginTime,start) + rowSpan(beginTime,endTime) - 1);
}

function drawWeekGrid(beginning){
	$("#calendar table").remove();
	var table = $("<table/>").addClass("week").appendTo("#calendar");
	table.append("<thead/>").append("<tr/>");
	$("<tr />").appendTo(".week thead");
	$("<th />").appendTo(".week thead tr");
	table.append("<tbody/>");
	var dayNames = <%= raw t("txt.day_names") %>;
	var monthNames = <%= raw t("txt.abbr_month_names") %>;
	var presDate = new Date($("#datepicker").datepicker("getDate"));
	if($("#view_weekend").attr("checked")){
		var y = 7;
	} else {
		var y = 5;
	}
	var next = beginning;
	for(var i = 0; i < y; i++){
		var dateString = next.getDate() + " " + monthNames[next.getMonth()] + " " + next.getFullYear();
		$("<th/>").html(dayNames[i] + "<br />" + dateString).appendTo(".week thead tr");
		next = new Date(next.getTime() + (60 * 60 * 24 * 1 * 1000));
	}
	
	var start = $("#slider-range").slider("values", 0);
	var stop = $("#slider-range").slider("values", 1);
	for(var i = 0; i < (stop-start); i++){
		$("<tr />").appendTo(".week tbody");
		var hour = i + start;
		if(hour.toString().length < 2){
			hour = "0" + hour.toString();
		} else {
			hour = hour.toString();
		}
		$("<td />").addClass("hour").html("<span class='big'>" + hour + "</span><span class='superscript'>00</span>").appendTo(".week tbody tr:last");
		for(var i2 = 0; i2 < y; i2++){
			if(y == 7){
				var cellClass = "weekend " + i.toString() + "_" + i2.toString();
			} else {
				var cellClass = "no_weekend " + i.toString() + "_" + i2.toString();
			}
			$("<td />").addClass(cellClass).appendTo(".week tbody tr:last");
		}
	}
	
}

function beginningOfWeek(presDate){
	if(presDate.getDay() == 0){
		var days_to_monday = 6;
	} else {
		var days_to_monday = presDate.getDay() - 1;
	}
	var beginning = presDate.getTime() - (60 * 60 * 24 * days_to_monday * 1000);
	return new Date(beginning);
}

function endOfWeek(presDate){
	if(presDate.getDay() == 0){
		var days_to_sunday = 0;
	} else {
		var days_to_sunday = 7 - presDate.getDay();
	}
	var end = presDate.getTime() + (60 * 60 * 24 * days_to_sunday * 1000) + ((60 * 60 * 24 * 1 * 1000) - 1000);
	return new Date(end);
}

function fetchAndDisplayWeek(start_time,end_time){
	var start =  $("#slider-range").slider("values", 0);
	var stop = $("#slider-range").slider("values", 1);
	var booked = 0;
	var unbooked = 0;
	$.getJSON('/appointments.json',{begintime: start_time, endtime: end_time}, function(data) {
	$.each(data, function(i,app){
		var begintime = new Date(app.begin);
		var endtime = new Date(app.end);
		if(begintime.getDay() == 0){
			var column = 6;
		} else {
			var column = begintime.getUTCDay() - 1;
		}
		var row = begintime.getUTCHours() - start;
		var cell = '.'+ row.toString() + "_" + column.toString();
		var time = formatTime(begintime);
		if(app.patient_id != null){
			if((row < 0) || (row >= (stop-start))){
				return true;
			}
			booked++;
			var name = app.patient.last_name + ", " + app.patient.first_name;
			$("<div/>").addClass("booked").html(time + " <span class='red'>" + name + "</span>").click(function() {
				$.get("/appointments/"+app.id.toString());
			}).appendTo(cell);
		} else {
			var newend = new Date(begintime.getTime() + (app.split * 60 * 1000));
			if((app.split == null) || (app.split == 0) || (newend >= endtime)){
				if((row < 0) || (row >= (stop-start))){
					return true;
				}
				unbooked++;
				var div = $("<div/>").addClass("unbooked").html(time + " ").click(function(e) {
					  if((e.target == "[object HTMLTableCellElement]") || (e.target == "[object HTMLDivElement]")){
						$.get("/appointments/"+app.id.toString());
					}
				}).appendTo(cell);
				$("<a/>").html("<%= t("appointments.book_now").upcase %>").attr({
					"data-remote": true,
					href: "/appointments/"+app.id.toString()+"/edit?mode=registered"
				}).appendTo(div);
			} else {
				var i = 0;
				var newbegin = new Date(begintime);
				while(newend <= endtime){
					var row = newbegin.getUTCHours() - start;
					if(row >= (stop-start)){
						break;
					} else if(row < 0) {
						i++;
						newbegin = $.advance(newbegin,app.split);
						newend = $.advance(newend,app.split);
						continue;
					}

					unbooked++;
					var cell = '.'+ row.toString() + "_" + column.toString();
					var time_begin = formatTime(newbegin);
					var time_end = formatTime(newend);
					var date_begin = newbegin.getUTCDate().toString() +"/"+ (newend.getUTCMonth()+1).toString() +"/"+ newbegin.getUTCFullYear().toString();
					var div = $("<div/>").addClass("unbooked").html(time_begin + " ").click(function(e) {
					    if((e.target == "[object HTMLTableCellElement]") || (e.target == "[object HTMLDivElement]")){
					      $.get($(this).children("a:first").attr("href"));
					      return false;
					    }
					 }).appendTo(cell);
					$("<a/>").addClass("hidden").attr({
						"data-remote": true,
						href: "/appointments/"+app.id.toString() + "?sub_id=" + i.toString()
					}).appendTo(div);
					$("<a/>").html("<%= t("appointments.book_now").upcase %>").attr({
						"data-remote": true,
						href: "/appointments/new?appointment[begin_time]=" + time_begin + "&appointment[end_time]=" + time_end + "&appointment[date]=" + date_begin
					}).appendTo(div);

					i++;
					newbegin = $.advance(newbegin,app.split);
					newend = $.advance(newend,app.split);

					if((newend > endtime) && (newbegin < endtime)){
						newend = endtime;
					}
				}
			}
		}
	});
	updateBookedCount(booked,unbooked);
  });
  
}

function updateBookedCount(booked,unbooked){
	if(booked != 1){
		$("#booked_count").html(" " + booked.toString() + " " + "<%= t('appointments.booked_apps') %>");
	} else{
		$("#booked_count").html(" " + booked.toString() + " " + "<%= t('appointments.booked_app') %>");
	}
	
	if(unbooked != 1){
		$("#unbooked_count").html(" " + unbooked.toString() + " " + "<%= t('appointments.unbooked_apps') %>");
	} else{
		$("#unbooked_count").html(" " + unbooked.toString() + " " + "<%= t('appointments.unbooked_app') %>");
	}
}

function formatTime(time){
	if(time.getUTCMinutes().toString().length == 1){
		return time.getUTCHours() + ":0" + time.getUTCMinutes()
	} else {
		return time.getUTCHours() + ":" + time.getUTCMinutes()
	}
}
</script>
<% end %>
<div id='dialog'></div>
<div id="viewoption">
  <div id="datepicker"></div>

  <div id="doctor_info">
	<h2><%= t("appointments.cal_for") + " " + current_user.name %></h2>
	<p><span class="legend-icon booked-icon"></span><span id="booked_count"></span><br />
	<span class="legend-icon unbooked-icon"></span><span id="unbooked_count"></span></p>
  </div>

  <div class="x"></div>
  <div id="hourrange" class="quiet"></div>
  <div id="slider-range"></div><br />

  <div id="toolbar" class="ui-widget-header ui-corner-all">
    <button id="next"><%= t("appointments.next") %></button>
    <button id="refresh"><%= t("appointments.refresh") %></button>
    <span id="weekendcheck" class="right"><%= check_box_tag 'view[weekend]', "1", true %><%= label_tag "view[weekend]", t("appointments.weekend") %></span>
    <span id="dayweek">
      <%= radio_button "view", "dayweek", "day" %><%= label_tag 'view_dayweek_day', t("appointments.day") %>
      <%= radio_button "view", "dayweek", "week", :checked => true %><%= label_tag 'view_dayweek_week', t("appointments.week") %>
    </span>
    <button id="previous"><%= t("appointments.previous") %></button>
    <%= link_to t("appointments.newapp"), new_appointment_path, :remote => true, 
        :class => "newapp", :title => t("appointments.newapp")%>
  </div>
</div>

<div id="calendar">

</div>

