<% content_for :styles do %>
<%= stylesheet_link_tag "jquery/jquery.ui.all" %>
<% end %>
<% content_for :scripts do %>
<%= javascript_include_tag "jquery-ui/jquery.ui.core.min.js" %>
<%= javascript_include_tag "jquery-ui/jquery.ui.widget.min.js" %>
<%= javascript_include_tag "jquery-ui/jquery.ui.datepicker.min.js" %>
<%= javascript_include_tag "jquery-ui/jquery.ui.datepicker-nl.js" %>
<%= javascript_include_tag "jquery-ui/jquery.ui.datepicker-en.js" %>
<%= javascript_include_tag "jquery-ui/jquery.ui.datepicker-fr.js" %>
<%= javascript_include_tag "jquery-ui/jquery.ui.mouse.min.js" %>
<%= javascript_include_tag "jquery-ui/jquery.ui.slider.min.js" %>
<%= javascript_include_tag "jquery-ui/jquery.ui.button.min.js" %>
<%= javascript_include_tag "jquery-ui/jquery.bgiframe-2.1.1.js" %>
<%= javascript_include_tag "jquery-ui/jquery.ui.draggable.min.js" %>
<%= javascript_include_tag "jquery-ui/jquery.ui.position.min.js" %>
<%= javascript_include_tag "jquery-ui/jquery.ui.resizable.min.js" %>
<%= javascript_include_tag "jquery-ui/jquery.ui.dialog.min.js" %>
<script type="text/javascript">
$(document).ready(function() {

	var cookieStartStop = getCookie("start_stop");
	if(cookieStartStop){
		var splitValue =  cookieStartStop.split("*");
		var start = splitValue[0];
		var stop = splitValue[1];
	} else {
		var start = 9;
		var stop = 17
	}
	
  $('<p/>').addClass("tooltip").appendTo("body");
  $("#slider-range").slider({
	orientation: "vertical",
    range: true, min: 0, max: 24, values: [24 - stop, 24 - start],
    change: function(event,ui) {
		$('.tooltip').hide();
	    var stop = 24 - ui.values[0];
	    var start = 24 -  ui.values[1];
	    writeCookie("start_stop",start.toString() + '*' + stop.toString(), 20 * 365);
	    refresh(true);
	 },
	slide: function(e, ui){
		var val = (24 - ui.value) + ":00";
		if(ui.value == 0){
			val = "0:00";
		}
		$('.tooltip').text(val).css('top', (e.pageY - 10) + 'px').css('left', (e.pageX + 15) + 'px').show();
	}
  });

  $("#dayweek").buttonset().css("float","right").change(function(){
	writeCookie("day_week",$("#dayweek input:checked").val(), 20 * 365);
	refresh(true);
  });
  var day_week = getCookie("day_week");
  if(day_week){
	$("#view_dayweek_"+day_week).attr("checked","checked");
	$("#dayweek").buttonset("refresh");
  }

  $("#view_weekend").button().change(function(){
	writeCookie("weekend",$(this).attr("checked"), 20 * 365);
	refresh(true);
  });
  if(getCookie("weekend") == "true" ){
	$("#view_weekend").attr("checked","checked");
	$("#view_weekend").button("refresh");
   } else if(getCookie("weekend") == "false") {
	$("#view_weekend").removeAttr("checked");
	$("#view_weekend").button("refresh");
   }

  $("a.newapp").button(	{
	            icons: { primary: "ui-icon-plusthick" },
	            text: false
	   });

  $("#previous").button({
    icons: {
      primary: "ui-icon-circle-triangle-w"
    },
    text: false
  }).click(function() {
    var presDate = getCurrentDate();
    var prevDate = presDate.getTime() - (60 * 60 * 24 * 1000);
    if($("#view_dayweek_week").attr("checked")){
      var prevDate = presDate.getTime() - (60 * 60 * 24 * 7 * 1000);
    } else {
      var prevDate = presDate.getTime() - (60 * 60 * 24 * 1000);
    }
    setCurrentDate(new Date(prevDate));
  });
  $("#next").button({
    icons: {
      primary: "ui-icon-circle-triangle-e"
    },
    text: false
  }).css("float","right").click(function() {
    var presDate = getCurrentDate();
    if($("#view_dayweek_week").attr("checked")){
      var nextDate = presDate.getTime() + (60 * 60 * 24 * 7 * 1000);
    } else {
      var nextDate = presDate.getTime() + (60 * 60 * 24 * 1000);
    }
    setCurrentDate(new Date(nextDate));
  });
  $("#refresh").button({
    icons: {
      primary: "ui-icon-refresh"
    },
    text: false
  }).css("float","right").click(function() {
    refresh(false);
  });
 $("#today").button({
    icons: {
      primary: "ui-icon-home"
    },
    text: false
  }).css("float","right").click(function() {
    setCurrentDate(new Date());
  });
  refresh(true);
});

function refresh(viewChanged){
	if($("#dayweek input:checked").val() == "week"){
		var beginTime = beginningOfWeek(getCurrentDate());
		var endTime = endOfWeek(getCurrentDate());
		if(viewChanged){
			drawWeekGrid(beginTime);
		} else {
			clearCalendar();
		}
		if(!$("#view_weekend").attr("checked")){
			endTime = new Date(endTime.getTime() - (60 * 60 * 24 * 2 * 1000));
		}	
		fetchAndDisplayWeek( Math.round(beginTime.getTime() / 1000),Math.round(endTime.getTime() / 1000));
	} else {
		if(viewChanged){
			drawDayGrid(beginTime);
		} else {
			clearCalendar();
		}
		var beginTime = getCurrentDate();
		var endTime = beginTime.getTime() + (60 * 60 * 24 * 1000);
		fetchAndDisplayDay(Math.round(beginTime.getTime() / 1000), Math.round(endTime / 1000));
	}
	
}

function clearCalendar(){
	$(".booked, .unbooked, .app").remove();
}

function drawDayGrid(){
	$("#calendar-header").attr("class","span-12").empty();
	$("#calendar-table").attr("class","span-12 last");
	$("#calendar").css("margin-right", "24px").empty();
	
	$("<div />").attr("id","datedisplay").appendTo("#calendar-header");
	
	$("<div />").attr("id","datepicker").appendTo("#datedisplay");
	$("#datepicker").datepicker($.datepicker.regional[ "<%= I18n.locale %>" ])	.change(function() {
	writeCookie("date", $(this).datepicker("getDate").getTime(), 20 * 365);
	refresh(true);
  }).css({ 'font-size' : '0.85em', "float":"right"});
	$("#datepicker").datepicker( "setDate" , getCurrentDate());
	
	var dayNames = <%= raw t("txt.day_names") %>;
	var monthNames = <%= raw t("txt.month_names") %>;
	var presDate = getCurrentDate();
	if(presDate.getDay() == 0){
		var day = 6;
	} else {
		var day = presDate.getDay() - 1;
	}
	var date = presDate.getDate().toString();
	var dateString = dayNames[day] + ",<br />" + date + " " + monthNames[presDate.getMonth()] + " " + presDate.getFullYear().toString();
	$("<span />").css({"font-size":"7em","margin-bottom" : "0","line-height":"1em"}).html(presDate.getDate().toString()).appendTo('#datedisplay');
	$("<br />").appendTo('#datedisplay');
	$("<span />").css("font-size","1.5em").html(dateString).appendTo('#datedisplay');
	
	$("<div />").addClass("x").appendTo("#calendar-header");
	$("<hr />").addClass("space").appendTo("#calendar-header");
	$("<div />").attr("id","applist").addClass("list").appendTo("#calendar-header");
	$("<table />").appendTo("#applist");
	
	var table = $("<table/>").addClass("day").appendTo("#calendar");
	table.append("<tbody/>");
	
	var start = 4 * getStart();
	var stop = 4 * getStop();
	
	for(var i = start; i < stop; i++){
		$("<tr />").appendTo(".day tbody");
		if ((i % 4) == 0){
			var hour = i/4;
			if(hour.toString().length < 2){
				hour = "0" + hour.toString() +":00";
			} else {
				hour = hour.toString() +":00";
			}
			$("<td />").attr("rowspan","4").addClass("hour").html("<span class='hour-text'>" + hour + "</span>").appendTo(".day tbody tr:last");
		}
		$("<td/>").addClass(i.toString() + "_" + date).appendTo(".day tbody tr:last");
	}
	
}

function fetchAndDisplayDay(start_time,end_time){
	$.getJSON('/appointments.json',{begintime: start_time, endtime: end_time}, function(data) {
	$.each(data, function(i,app){
		var begintime = new Date(app.begin);
		var endtime = new Date(app.end);
		var time = formatTime(begintime);
		if(app.patient_id != null){
			var name = app.patient.last_name + ", " + app.patient.first_name;
			addApp("booked",time,formatTime(endtime),name,app.patient_id,app.id);
			var div = getAppDiv("booked",begintime,endtime);
			if(div){
				$("<span />").addClass("red").html(name).appendTo(div);
				div.click(function() {
					$.get("/appointments/"+app.id.toString());
				});
			} 
			
		} else {
			addApp("unbooked",time,formatTime(endtime),null,null,app.id);
			var newend = new Date(begintime.getTime() + (app.split * 60 * 1000));
			if((app.split == null) || (app.split == 0) || (newend >= endtime)){
				var div = getAppDiv("unbooked",begintime,endtime);
				if(div){
					div.click(function(e) {
						  if((e.target == "[object HTMLTableCellElement]") || (e.target == "[object HTMLDivElement]")){
							$.get("/appointments/"+app.id.toString());
						}
					});
					$("<a/>").html("<%= t("appointments.book_now").upcase %>").attr({
						"data-remote": true,
						href: "/appointments/"+app.id.toString()+"/edit?mode=registered"
					}).appendTo(div);
				}
			} else {
				var i = 0;
				var newbegin = new Date(begintime);
				while(newend <= endtime){
					var div = getAppDiv("unbooked",newbegin,newend);
					if(div){
						div.click(function(e) {
						    if((e.target == "[object HTMLTableCellElement]") || (e.target == "[object HTMLDivElement]")){
						      $.get($(this).children("a:first").attr("href"));
						      return false;
						    }
						 });
						$("<a/>").addClass("hidden").attr({
							"data-remote": true,
							href: "/appointments/"+app.id.toString() + "?sub_id=" + i.toString()
						}).appendTo(div);
						var time_begin = formatTime(newbegin);
						var time_end = formatTime(newend);
						var date_begin = newbegin.getUTCDate().toString() +"/"+ (newend.getUTCMonth()+1).toString() +"/"+ newbegin.getUTCFullYear().toString();
						$("<a/>").html("<%= t("appointments.book_now").upcase %>").attr({
							"data-remote": true,
							href: "/appointments/new?appointment[begin_time]=" + time_begin + "&appointment[end_time]=" + time_end + "&appointment[date]=" + date_begin
						}).appendTo(div);
					}
					
					i++;
					newbegin = $.advance(newbegin,app.split);
					newend = $.advance(newend,app.split);
					
					if((newend > endtime) && (newbegin < endtime)){
						newend = endtime;
					}
				}
			}
		}
	});
  });
}

function addApp(booked, begintime,endtime, name, patient_id, id){
	var tr = $("<tr />");
	$("<td />").addClass("check").html("<span class='legend-icon "+ booked +"-icon'>").appendTo(tr);
	$("<td />").css("width","80px").html(begintime + "-" + endtime).appendTo(tr);
	if(name != null){
		var a = $("<a/>").html(name).attr("href", "/users/"+patient_id);
		$("<td />").append(a).appendTo(tr);
	} else {
		var a = $("<a/>").html("<%= t("appointments.unbooked").downcase %>").attr({
			"data-remote": true,
			href: "/appointments/"+id
		});
		$("<td />").append(a).appendTo(tr);
	}
	var a = $("<a/>").addClass("button ui-icon-wrench").attr({
		"data-remote": true,
		href: "/appointments/"+id+"/edit"
	});
	$("<td />").addClass("icon").append(a).appendTo(tr);
	var a = $("<a/>").addClass("button ui-icon-trash").attr({
		"data-remote": true,
		"data-method":"delete",
		"rel":"nofollow",
		"data-confirm":"<%= t("users.confirmation") %>",
		href: "/appointments/"+id
	});
	$("<td />").addClass("icon").append(a).appendTo(tr);
	tr.addClass("app").appendTo("#applist table");
}

function getAppDiv(booked, begintime, endtime){
	
	var begincell = beginCell(begintime);
	var endcell = endCell(begintime,endtime);
	var start = getStart()*4;
	var stop = getStop()*4;
	var div = $("<div/>");
	
	if((endcell >= start) && (begincell < start)){
		begintime.setUTCHours(getStart());
		begintime.setUTCMinutes(0);
		var time = " ";
		var row = "."+ (getStart()*4) + "_" + begintime.getDate().toString();
		var rowtop = $(row).position().top;
		var width = $(row).width() - 10;
		var height = duration(begintime,endtime)*2;
		if(height < 20){
			height = 20;
		}
		div.css("border-top" , "hidden");
	} else if((begincell < start) || (begincell >= stop)){
		return false;
	} else {
		var time = formatTime(begintime);
		var row = "."+ begincell.toString() + "_" + begintime.getDate().toString();
		var rowtop = (top(begintime)*2) + $(row).position().top;
		var width = $(row).width() - 10;
		var height = duration(begintime,endtime)*2;
		if(height < 20){
			height = 20;
		}
		var tablebottom = $("#calendar table").position().top + $("#calendar table").height();
		if((rowtop + height) > (tablebottom+1)){
			height =  tablebottom - rowtop ;
			div.css("border-bottom" , "hidden");
		}
	}
	div.addClass(booked).css({ "top": rowtop, "height" : height, "width" : width}).html(time + " ").hover(
		function() {
			$(this).css("z-index","3");
		}, 
		function() {
			$(this).css("z-index","2");
		}
	).appendTo(row);
	return div;
}

function top(beginTime){
	return beginTime.getUTCMinutes() % 15;
}

function duration(beginTime, endTime){
	return Math.round((endTime.getTime() - beginTime.getTime())/60000);
}

function beginCell(beginTime){
  	var min = (beginTime.getUTCMinutes() - (beginTime.getUTCMinutes() % 15))/15;
  	return (min + (beginTime.getUTCHours()*4));
}

function rowSpan(beginTime, endTime){
  var duration = Math.round((endTime.getTime() - beginTime.getTime())/1000);
  var a = 15 - top(beginTime);
  var dur = parseInt(((duration - (a*60))/900));
  if ((duration - (a*60)) <= 0){
    dur = 1;
  } else if ( ((duration - (a*60)) % 900) != 0){
    dur += 2;
  } else {
    dur += 1
  }
  return dur
}

function endCell(beginTime,endTime){
  return (beginCell(beginTime) + rowSpan(beginTime,endTime) - 1);
}

function drawWeekGrid(beginning){
	$("#calendar-header").attr("class","span-24 last").empty();
	$("#calendar-table").attr("class","span-24 last");
	$("#calendar").css("margin-right", "24px").empty();

	var monthNames = <%= raw t("txt.abbr_month_names") %>;
	var selector = getWeekSelector(beginning, monthNames);
	selector.appendTo("#calendar-header");
	
	var table = $("<table/>").addClass("week").appendTo("#calendar");
	table.append("<thead/>").append("<tr/>");
	$("<tr />").appendTo(".week thead");
	$("<th />").appendTo(".week thead tr");
	table.append("<tbody/>");
	var dayNames = <%= raw t("txt.day_names") %>;
	var presDate = new Date(getCurrentDate());
	if($("#view_weekend").attr("checked")){
		var y = 7;
	} else {
		var y = 5;
	}
	var next = beginning;
	for(var i = 0; i < y; i++){
		var dateString = next.getDate() + " " + monthNames[next.getMonth()] + " " + next.getFullYear();
		var input = $("<input />");
		input.attr("type","hidden").val(next.getTime());
		$("<th/>").html(dayNames[i] + "<br />" + dateString).append(input).click(function(e){
			var time = parseInt($(this).children("input").val());
			$("#view_dayweek_day").attr("checked","checked");
			$("#dayweek").buttonset("refresh");
			setCurrentDate(new Date(time));
		}).css("cursor","pointer").appendTo(".week thead tr");
		next = new Date(next.getTime() + (60 * 60 * 24 * 1 * 1000));
	}
	
	var start = getStart();
	var stop = getStop();
	for(var i = 0; i < (stop-start); i++){
		$("<tr />").appendTo(".week tbody");
		var hour = i + start;
		if(hour.toString().length < 2){
			hour = "0" + hour.toString();
		} else {
			hour = hour.toString();
		}
		$("<td />").addClass("hour").html("<span class='big'>" + hour + "</span><span class='superscript'>00</span>").appendTo(".week tbody tr:last");
		for(var i2 = 0; i2 < y; i2++){
			if(y == 7){
				var cellClass = "weekend " + i.toString() + "_" + i2.toString();
			} else {
				var cellClass = "no_weekend " + i.toString() + "_" + i2.toString();
			}
			$("<td />").addClass(cellClass).appendTo(".week tbody tr:last");
		}
	}
	
}

function getWeekSelector(beginning, monthNames){
	var table = $("<table />").addClass("weekselector");
	var tr = $("<tr />");
	
	for(var i = -2; i < 10; i++){
		var begin = new Date(beginning.getTime() + (i *60 * 60 * 24 * 7 * 1000));
		var end = endOfWeek(begin);
		var td = $("<td />");
		td.addClass('ui-widget-header ui-corner-all').html(begin.getDate()+"-"+end.getDate()+" "+monthNames[end.getMonth()]).appendTo(tr);
		$("<input />").attr("type","hidden").val(begin.getTime()).appendTo(td);
		td.click(function(e) {
			var time = parseInt($(this).children("input").val());
		    setCurrentDate(new Date(time));
		 });
		if(i == 0){
			td.css("background-color","#fff");
		}
		
	}
	tr.appendTo(table);
	return table;
}

function beginningOfWeek(presDate){
	if(presDate.getDay() == 0){
		var days_to_monday = 6;
	} else {
		var days_to_monday = presDate.getDay() - 1;
	}
	var beginning = presDate.getTime() - (60 * 60 * 24 * days_to_monday * 1000);
	return new Date(beginning);
}

function endOfWeek(presDate){
	if(presDate.getDay() == 0){
		var days_to_sunday = 0;
	} else {
		var days_to_sunday = 7 - presDate.getDay();
	}
	var end = presDate.getTime() + (60 * 60 * 24 * days_to_sunday * 1000) + ((60 * 60 * 24 * 1 * 1000) - 1000);
	return new Date(end);
}

function fetchAndDisplayWeek(start_time,end_time){
	var start =  getStart();
	var stop = getStop();
	$.getJSON('/appointments.json',{begintime: start_time, endtime: end_time}, function(data) {
	$.each(data, function(i,app){
		var begintime = new Date(app.begin);
		var endtime = new Date(app.end);
		if(begintime.getDay() == 0){
			var column = 6;
		} else {
			var column = begintime.getUTCDay() - 1;
		}
		var row = begintime.getUTCHours() - start;
		var cell = '.'+ row.toString() + "_" + column.toString();
		var time = formatTime(begintime);
		if(app.patient_id != null){
			if((row < 0) || (row >= (stop-start))){
				return true;
			}
			var name = app.patient.last_name + ", " + app.patient.first_name;
			$("<div/>").addClass("booked").html(time + " <span class='red'>" + name + "</span>").click(function() {
				$.get("/appointments/"+app.id.toString());
			}).appendTo(cell);
		} else {
			var newend = new Date(begintime.getTime() + (app.split * 60 * 1000));
			if((app.split == null) || (app.split == 0) || (newend >= endtime)){
				if((row < 0) || (row >= (stop-start))){
					return true;
				}
				var div = $("<div/>").addClass("unbooked").html(time + " ").click(function(e) {
					  if((e.target == "[object HTMLTableCellElement]") || (e.target == "[object HTMLDivElement]")){
						$.get("/appointments/"+app.id.toString());
					}
				}).appendTo(cell);
				$("<a/>").html("<%= t("appointments.book_now").upcase %>").attr({
					"data-remote": true,
					href: "/appointments/"+app.id.toString()+"/edit?mode=registered"
				}).appendTo(div);
			} else {
				var i = 0;
				var newbegin = new Date(begintime);
				while(newend <= endtime){
					var row = newbegin.getUTCHours() - start;
					if(row >= (stop-start)){
						break;
					} else if(row < 0) {
						i++;
						newbegin = $.advance(newbegin,app.split);
						newend = $.advance(newend,app.split);
						continue;
					}
					var cell = '.'+ row.toString() + "_" + column.toString();
					var time_begin = formatTime(newbegin);
					var time_end = formatTime(newend);
					var date_begin = newbegin.getUTCDate().toString() +"/"+ (newend.getUTCMonth()+1).toString() +"/"+ newbegin.getUTCFullYear().toString();
					var div = $("<div/>").addClass("unbooked").html(time_begin + " ").click(function(e) {
					    if((e.target == "[object HTMLTableCellElement]") || (e.target == "[object HTMLDivElement]")){
					      $.get($(this).children("a:first").attr("href"));
					      return false;
					    }
					 }).appendTo(cell);
					$("<a/>").addClass("hidden").attr({
						"data-remote": true,
						href: "/appointments/"+app.id.toString() + "?sub_id=" + i.toString()
					}).appendTo(div);
					$("<a/>").html("<%= t("appointments.book_now").upcase %>").attr({
						"data-remote": true,
						href: "/appointments/new?appointment[begin_time]=" + time_begin + "&appointment[end_time]=" + time_end + "&appointment[date]=" + date_begin
					}).appendTo(div);

					i++;
					newbegin = $.advance(newbegin,app.split);
					newend = $.advance(newend,app.split);

					if((newend > endtime) && (newbegin < endtime)){
						newend = endtime;
					}
				}
			}
		}
	});
  });
  
}

function formatTime(time){
	if(time.getUTCMinutes().toString().length == 1){
		var minutes = "0" + time.getUTCMinutes();
	} else {
		var minutes = time.getUTCMinutes();
	}
	if(time.getUTCHours().toString().length == 1){
		var hours = "0" + time.getUTCHours();
	} else {
		var hours = time.getUTCHours();
	}
	return hours.toString() + ":" + minutes.toString();
}

function getCurrentDate(){
	var cookieDate = getCookie("date");
	var date = new Date();
	if(cookieDate){
	date.setTime(cookieDate);
	}
	return date;
}

function setCurrentDate(date){
	writeCookie("date", date.getTime(), 20 * 365);
	refresh(true);
}

function getStop(){
  return (24 - $("#slider-range").slider("values", 0));
}

function getStart(){
   return (24 - $("#slider-range").slider("values", 1));
}
</script>
<% end %>
<div id='dialog'></div>
<div id="toolbar" class="ui-widget-header ui-corner-all">
    <button id="next"><%= t("appointments.next") %></button>
    <button id="refresh"><%= t("appointments.refresh") %></button>
    <button id="today"><%= t("appointments.today") %></button>
    <span id="weekendcheck" class="right"><%= check_box_tag 'view[weekend]', "1", true %><%= label_tag "view[weekend]", t("appointments.weekend") %></span>
    <span id="dayweek">
      <%= radio_button "view", "dayweek", "day" %><%= label_tag 'view_dayweek_day', t("appointments.day") %>
      <%= radio_button "view", "dayweek", "week", :checked => true %><%= label_tag 'view_dayweek_week', t("appointments.week") %>
    </span>
    <button id="previous"><%= t("appointments.previous") %></button>
    <%= link_to t("appointments.newapp"), new_appointment_path, :remote => true, 
        :class => "newapp", :title => t("appointments.newapp")%>
</div>

<div id="calendar-header"></div>
<div id="calendar-table">
	<div id="slider-range"></div>
	<div id="calendar"></div>
</div>


