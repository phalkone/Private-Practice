<% content_for :styles do %>
<%= stylesheet_link_tag "jquery/jquery.ui.all" %>
<% end %>
<% content_for :scripts do %>
<%= javascript_include_tag "jquery-ui/jquery.ui.core.min.js" %>
<%= javascript_include_tag "jquery-ui/jquery.ui.widget.min.js" %>
<%= javascript_include_tag "jquery-ui/jquery.ui.datepicker.min.js" %>
<%= javascript_include_tag "jquery-ui/jquery.ui.datepicker-nl.js" %>
<%= javascript_include_tag "jquery-ui/jquery.ui.datepicker-en.js" %>
<%= javascript_include_tag "jquery-ui/jquery.ui.datepicker-fr.js" %>
<%= javascript_include_tag "jquery-ui/jquery.ui.mouse.min.js" %>
<%= javascript_include_tag "jquery-ui/jquery.ui.slider.min.js" %>
<%= javascript_include_tag "jquery-ui/jquery.ui.button.min.js" %>
<%= javascript_include_tag "jquery-ui/jquery.bgiframe-2.1.1.js" %>
<%= javascript_include_tag "jquery-ui/jquery.ui.draggable.min.js" %>
<%= javascript_include_tag "jquery-ui/jquery.ui.position.min.js" %>
<%= javascript_include_tag "jquery-ui/jquery.ui.resizable.min.js" %>
<%= javascript_include_tag "jquery-ui/jquery.ui.dialog.min.js" %>
<script type="text/javascript">

var dayNames = <%= raw t("txt.day_names") %>;
var monthNames = <%= raw t("txt.month_names") %>;
var abbrMonthNames = <%= raw t("txt.abbr_month_names") %>;
var start = 9;
var startTime = null;
var stop = 17;
var stopTime = null;
var currentDate = new Date();
var dayTableTop = null;
var dayTableBottom = null;
var dayWidth = null;
var locale = "<%= I18n.locale.to_s %>";

$(document).ready(function() {
	
  var cookieStartStop = getCookie("start_stop");
  if(cookieStartStop){
	var splitValue =  cookieStartStop.split("*");
	start = splitValue[0];
	stop = splitValue[1];
  }
	
  var cookieDate = getCookie("date");
  if(cookieDate){
	currentDate.setTime(cookieDate);
  } else {
	currentDate = beginningOfDay(currentDate);
  }
  setStartStopTime();
	
  $('<p/>').addClass("tooltip").appendTo("body");
  $("#slider-range").slider({
	orientation: "vertical",
    range: true, min: 0, max: 24, values: [24 - stop, 24 - start],
    change: function(event,ui) {
		$('.tooltip').hide();
	    stop = 24 - ui.values[0];
	    start = 24 -  ui.values[1];
		setStartStopTime();
	    writeCookie("start_stop",start.toString() + '*' + stop.toString(), 20 * 365);
	    refresh(true);
	 },
	slide: function(e, ui){
		var val = (24 - ui.value) + ":00";
		if(ui.value == 0){
			val = "0:00";
		}
		$('.tooltip').text(val).css('top', (e.pageY - 10) + 'px').css('left', (e.pageX + 15) + 'px').show();
	}
  });

  $("#dayweek").buttonset().css("float","right").change(function(){
	writeCookie("day_week",$("#dayweek input:checked").val(), 20 * 365);
	refresh(true);
  });
  var day_week = getCookie("day_week");
  if(day_week){
	$("#view_dayweek_"+day_week).attr("checked","checked");
	$("#dayweek").buttonset("refresh");
  }

  $("#view_weekend").button().change(function(){
	writeCookie("weekend",$(this).attr("checked"), 20 * 365);
	refresh(true);
  });
  if(getCookie("weekend") == "true" ){
	$("#view_weekend").attr("checked","checked");
	$("#view_weekend").button("refresh");
   } else if(getCookie("weekend") == "false") {
	$("#view_weekend").removeAttr("checked");
	$("#view_weekend").button("refresh");
   }

  $("a.newapp").button(	{
	            icons: { primary: "ui-icon-plusthick" },
	            text: false
	   });

  $("#previous").button({
    icons: {
      primary: "ui-icon-circle-triangle-w"
    },
    text: false
  }).click(function() {
    var prevDate = currentDate.getTime() - (60 * 60 * 24 * 1000);
    if($("#view_dayweek_week").attr("checked")){
      var prevDate = currentDate.getTime() - (60 * 60 * 24 * 7 * 1000);
    } else {
      var prevDate = currentDate.getTime() - (60 * 60 * 24 * 1000);
    }
    setCurrentDate(new Date(prevDate));
  });
  $("#next").button({
    icons: {
      primary: "ui-icon-circle-triangle-e"
    },
    text: false
  }).css("float","right").click(function() {
    if($("#view_dayweek_week").attr("checked")){
      var nextDate = currentDate.getTime() + (60 * 60 * 24 * 7 * 1000);
    } else {
      var nextDate = currentDate.getTime() + (60 * 60 * 24 * 1000);
    }
    setCurrentDate(new Date(nextDate));
  });
  $("#refresh").button({
    icons: {
      primary: "ui-icon-refresh"
    },
    text: false
  }).css("float","right").click(function() {
    refresh(false);
  });
 $("#today").button({
    icons: {
      primary: "ui-icon-home"
    },
    text: false
  }).css("float","right").click(function() {
	var date = new Date();
	date = beginningOfDay(date);
    setCurrentDate(date);
  });
  refresh(true);
});

function refresh(viewChanged){
	if($("#dayweek input:checked").val() == "week"){
		var beginTime = beginningOfWeek(currentDate);
		var endTime = endOfWeek(currentDate);
		if(viewChanged){
			drawWeekGrid(beginTime);
		} else {
			clearCalendar();
		}
		if(!$("#view_weekend").attr("checked")){
			endTime = new Date(endTime.getTime() - (60 * 60 * 24 * 2 * 1000));
		}	
		fetchAndDisplayWeek( Math.round(beginTime.getTime() / 1000),Math.round(endTime.getTime() / 1000));
	} else {
		if(viewChanged){
			drawDayGrid(beginTime);
		} else {
			clearCalendar();
		}
		var endTime = currentDate.getTime() + (60 * 60 * 24 * 1000);
		fetchAndDisplayDay(Math.round(currentDate.getTime() / 1000), Math.round(endTime / 1000));
	}
	
}

function clearCalendar(){
	$(".booked, .unbooked, .app").remove();
}

function drawDayGrid(){
	$("#calendar-header").attr("class","span-12").empty();
	$("#calendar-table").attr("class","span-12 last");
	$("#calendar").css("margin-right", "24px").empty();
	
	$("<div />").attr("id","datedisplay").appendTo("#calendar-header");
	
	$("<div />").attr("id","datepicker").appendTo("#datedisplay");
	$("#datepicker").datepicker($.datepicker.regional[ "<%= I18n.locale %>" ])	.change(function() {
		var date = $(this).datepicker("getDate");
		var utctime = date.getTime() - (date.getTimezoneOffset() * 60 * 1000);
		setCurrentDate(new Date(utctime));
  }).css({ 'font-size' : '0.85em', "float":"right"});
	var localdate = currentDate.getTime() + ((new Date().getTimezoneOffset()) * 60 * 1000);
	$("#datepicker").datepicker( "setDate" , new Date(localdate));
	
	if(currentDate.getUTCDay() == 0){
		var day = 6;
	} else {
		var day = currentDate.getUTCDay() - 1;
	}
	var date = currentDate.getUTCDate().toString();
	var dateString = dayNames[day] + ",<br />" + date + " " + monthNames[currentDate.getUTCMonth()] + " " + currentDate.getUTCFullYear().toString();
	$("<span />").css({"font-size":"7em","margin-bottom" : "0","line-height":"1em"}).html(currentDate.getUTCDate().toString()).appendTo('#datedisplay');
	$("<br />").appendTo('#datedisplay');
	$("<span />").css("font-size","1.5em").html(dateString).appendTo('#datedisplay');
	
	$("<div />").addClass("x").appendTo("#calendar-header");
	$("<hr />").addClass("space").appendTo("#calendar-header");
	$("<div />").attr("id","applist").addClass("list").appendTo("#calendar-header");
	$("<table />").appendTo("#applist");
	
	var table = $("<table/>").addClass("day").appendTo("#calendar");
	table.append("<tbody/>");
	
	for(var i = (start*4); i < (stop*4); i++){
		$("<tr />").appendTo(".day tbody");
		if ((i % 4) == 0){
			var hour = i/4;
			if(hour.toString().length < 2){
				hour = "0" + hour.toString() +":00";
			} else {
				hour = hour.toString() +":00";
			}
			$("<td />").attr("rowspan","4").addClass("hour").html("<span class='hour-text'>" + hour + "</span>").appendTo(".day tbody tr:last");
		}
		$("<td/>").addClass("grid").appendTo(".day tbody tr:last");
	}
	dayTableTop = $("#calendar table").position().top;
	dayTableBottom = dayTableTop + $("#calendar table").height();
	dayWidth = $(".grid").width() - 10;
}

function fetchAndDisplayDay(start_time,end_time){
  $.getJSON('/appointments.json',{begintime: start_time, endtime: end_time}, function(data) {
	$.each(data, function(i,app){
		addApp(app);
		addDiv(app);
	});
  });
}

function addApp(app){
	var tr = $("<tr />");
	
	//Legend
	$("<td />").addClass("check").html("<span class='legend-icon "+ appBooked(app) +"-icon'>").appendTo(tr);
	
	//Time
	$("<td />").css("width","80px").html(formattedBeginTime(app) + "-" + formattedEndTime(app)).appendTo(tr);
	
	//Name
	if(app.patient_id != null){
		var name = app.patient.last_name + ", " + app.patient.first_name;
		var a = $("<a/>").html(name).attr("href", "/users/"+app.patient_id);
	} else {
		var a = $("<a/>").html("<%= t("appointments.unbooked").downcase %>").attr({
			"data-remote": true,
			href: "/" + locale + "/appointments/"+app.id
		});
	}
	$("<td />").append(a).appendTo(tr);
	
	//Edit
	var a = $("<a/>").addClass("button ui-icon-wrench").attr({
		"data-remote": true,
		href: "/" + locale + "/appointments/"+app.id+"/edit"
	});
	$("<td />").addClass("icon").append(a).appendTo(tr);
	
	//Delete
	var a = $("<a/>").addClass("button ui-icon-trash").attr({
		"data-remote": true,
		"data-method":"delete",
		"rel":"nofollow",
		"data-confirm":"<%= t("users.confirmation") %>",
		href: "/" + locale + "/appointments/"+app.id
	});
	$("<td />").addClass("icon").append(a).appendTo(tr);
	
	
	tr.addClass("app " + app.id).appendTo("#applist table");
}

function addDiv(app){

	var div = $("<div/>");
	var type = typeDiv(app);
	var booked = appBooked(app);
	div.addClass(app.id + " "+ booked).appendTo(".grid:first");
	var begintime = new Date(app.begin);
	var endtime = new Date(app.end);
	
	var rowtop = topDiv(begintime);
	//Get settings
	if((endtime <= startTime) || (begintime >= stopTime)){
		return false
	} else 	if((endtime >= startTime) && (begintime < startTime)){
		var time = " ";
		rowtop = dayTableTop;
		div.css("border-top" , "hidden");
		var height = heightDiv(startTime,endtime);
	} else {
		var time = formatTime(begintime);
		var height = heightDiv(begintime,endtime);
		if((rowtop + height) > (dayTableBottom+1)){
			height =  dayTableBottom - rowtop ;
			div.css("border-bottom" , "hidden");
		}
	}
	
	//Set settings
	div.css({ "top": rowtop, "height" : height, "width" : dayWidth, "overflow": "hidden", "z-index" : "2", "position" : "absolute"});

	if(type != "split"){
		$("<span />").addClass("time").html(time + " ").appendTo(div);
		div.css("padding", "0 5px 0 5px");
		hoverDiv(div);
		clickDiv(div,app.id,null);
		linkDiv(div,app.id,app.patient,null);
	} else {
		addSubDivs(div,app)
	}
	
	draggableDiv(div,app.id);
	resizableDiv(div,app.id);
}

function addSubDivs(maindiv,app){
	var begintime = new Date(app.begin);
	var endtime = new Date(app.end);
	var newbegin = new Date(begintime);
	var newend = new Date(begintime.getTime() + (app.split * 60 * 1000));
	var width = maindiv.width();
	maindiv.css("width",width+10);
	var i = 0;
	
	while(newend <= endtime){
		var div = $("<div/>");
		
		if((newend <= startTime) || (newbegin >= stopTime)){
			i++;
			newbegin = $.advance(newbegin,app.split);
			newend = $.advance(newend,app.split);

			if((newend > endtime) && (newbegin < endtime)){
				newend = endtime;
			}
			continue;
		} else 	if((newend >= startTime) && (newbegin < startTime)){
			var time = " ";
			var height = heightDiv(startTime,newend);
		} else {
			var time = formatTime(newbegin);
			var height = heightDiv(newbegin,newend);
		}
		
		div.addClass("unbooked");
		div.css({ "height" : height -1, "width" : width,"position":"relative", "padding": "0 5px 0 5px","overflow": "hidden", "z-index" : "2", "border-top" : "hidden", "border-left": "hidden", "border-right": "hidden"});
		$("<span />").addClass("time").html(time + " ").appendTo(div);	
		hoverDiv(div);
		clickDiv(div,app.id,i);
		linkDiv(div,app.id,null,i);
		div.appendTo(maindiv);
		
		i++;
		newbegin = $.advance(newbegin,app.split);
		newend = $.advance(newend,app.split);
		
		if((newend > endtime) && (newbegin < endtime)){
			newend = endtime;
		}
	}
	div.css("border-bottom","hidden");
}

function appBooked(app){
	if(app.patient_id != null){
		return "booked";
	} else {
		return "unbooked";
	}
}

function formattedBeginTime(app){
	var date = new Date(app.begin);
	return formatTime(date);
}

function formattedEndTime(app){
	var date = new Date(app.end);
	return formatTime(date);
}

function draggableDiv(div, id){
	div.draggable({ 
		axis: "y", 
		containment: "#calendar",
		stop: function(event, ui) {
			var newbegin = beginDiv($(this).position().top);
			var newend = newbegin.getTime() + (duration($(this).height()) * 60 * 1000);
			$.post("/appointments/"+ id +"/move", { begintime: Math.round(newbegin.getTime()/1000), endtime: Math.round(newend/1000) } );
			}
	});
}

function resizableDiv(div, id){
	div.resizable({
		handles: "n,s",
		containment: "#calendar",
		stop: function(event, ui) {
			var newbegin = beginDiv($(this).position().top);
			var newend = newbegin.getTime() + (duration($(this).height()) * 60 * 1000);
			$.post("/appointments/"+ id +"/move", { begintime: Math.round(newbegin.getTime()/1000), endtime: Math.round(newend/1000) } );
		}
	});
}

function clickDiv(div, id, subid){
	div.click(function(e) {
		  if((e.target == "[object HTMLTableCellElement]") || (e.target == "[object HTMLDivElement]")){
			if(subid != null){
				$.get("/" + locale + "/appointments/"+ id.toString() + "?sub_id=" + subid.toString());
			} else {
				$.get("/" + locale + "/appointments/"+ id.toString());
			}
		}
	});
}

function linkDiv(div,id,patient,subid){
	a = $("<a/>");
	if(patient != null){
		var name = patient.last_name + ", " + patient.first_name;
		var href = "/users/"+patient.id.toString();
		var data = false;
	} else {
		var name = "<%= t("appointments.book_now").upcase %>";
		var data = true;
		if(subid != null){
			var href = "/" + locale + "/appointments/"+id.toString()+"/edit?mode=registered&sub_id=" + subid.toString();
		} else {
			var href = "/" + locale + "/appointments/"+id.toString()+"/edit?mode=registered";
		}
	}
	if(data){
		a.attr("data-remote",true);
	}
	a.html(name).attr("href", href).appendTo(div);
}

function hoverDiv(div){
	div.hover(
		function() {
			$(this).css("z-index","3");
		}, 
		function() {
			$(this).css("z-index","2");
		}
	);
}

function beginDiv(top){
	var minutes = Math.round((top-dayTableTop)/2);
	return new Date(startTime.getTime() + (minutes * 60 *1000) );
}

function topDiv(beginTime){
	var diff = beginTime.getTime() - startTime.getTime();
	var top = Math.round(diff/(60 * 1000));
	return dayTableTop + (top *2);
}

function heightDiv(beginTime, endTime){
	var dur = Math.round((endTime.getTime() - beginTime.getTime())/60000);
	var height = dur * 2;
	if(height < 20){
		height = 20;
	}
	return height;
}

function typeDiv(app){
	if(app.patient_id != null){
		return "booked";
	} else {
		var begintime = new Date(app.begin);
		var endtime = new Date(app.end);
		var newend = new Date(begintime.getTime() + (app.split * 60 * 1000));
		if((app.split == null) || (app.split == 0) || (newend >= endtime)){
			return "unbooked";
		} else {
			return "split";
		}
	}
}

function duration(height){
	return Math.round(height/2);
}

function drawWeekGrid(beginning){
	$("#calendar-header").attr("class","span-24 last").empty();
	$("#calendar-table").attr("class","span-24 last");
	$("#calendar").css("margin-right", "24px").empty();

	var selector = getWeekSelector(beginning);
	selector.appendTo("#calendar-header");
	
	var table = $("<table/>").addClass("week").appendTo("#calendar");
	table.append("<thead/>").append("<tr/>");
	$("<tr />").appendTo(".week thead");
	$("<th />").appendTo(".week thead tr");
	table.append("<tbody/>");
	if($("#view_weekend").attr("checked")){
		var y = 7;
	} else {
		var y = 5;
	}
	var next = beginning;
	for(var i = 0; i < y; i++){
		var dateString = next.getUTCDate() + " " + abbrMonthNames[next.getUTCMonth()] + " " + next.getUTCFullYear();
		var input = $("<input />");
		input.attr("type","hidden").val(next.getTime());
		$("<th/>").html(dayNames[i] + "<br />" + dateString).append(input).click(function(e){
			var time = parseInt($(this).children("input").val());
			$("#view_dayweek_day").attr("checked","checked");
			$("#dayweek").buttonset("refresh");
			writeCookie("day_week",$("#dayweek input:checked").val(), 20 * 365);
			setCurrentDate(new Date(time));
		}).css("cursor","pointer").appendTo(".week thead tr");
		next = new Date(next.getTime() + (60 * 60 * 24 * 1 * 1000));
	}
	
	for(var i = 0; i < (stop-start); i++){
		$("<tr />").appendTo(".week tbody");
		var hour = i + start;
		if(hour.toString().length < 2){
			hour = "0" + hour.toString();
		} else {
			hour = hour.toString();
		}
		$("<td />").addClass("hour").html("<span class='big'>" + hour + "</span><span class='superscript'>00</span>").appendTo(".week tbody tr:last");
		for(var i2 = 0; i2 < y; i2++){
			if(y == 7){
				var cellClass = "weekend " + i.toString() + "_" + i2.toString();
			} else {
				var cellClass = "no_weekend " + i.toString() + "_" + i2.toString();
			}
			$("<td />").addClass(cellClass).appendTo(".week tbody tr:last");
		}
	}
	
}

function getWeekSelector(beginning){
	var table = $("<table />").addClass("weekselector");
	var tr = $("<tr />");
	
	for(var i = -2; i < 10; i++){
		var begin = new Date(beginning.getTime() + (i *60 * 60 * 24 * 7 * 1000));
		var end = endOfWeek(begin);
		var td = $("<td />");
		td.addClass('ui-widget-header ui-corner-all').html(begin.getUTCDate()+"-"+end.getUTCDate()+" "+abbrMonthNames[end.getUTCMonth()]).appendTo(tr);
		$("<input />").attr("type","hidden").val(begin.getTime()).appendTo(td);
		td.click(function(e) {
			var time = parseInt($(this).children("input").val());
		    setCurrentDate(new Date(time));
		 });
		if(i == 0){
			td.css("background-color","#fff");
		}
		
	}
	tr.appendTo(table);
	return table;
}

function beginningOfDay(date){
	date.setUTCHours(0);
	date.setUTCMinutes(0);
	date.setUTCSeconds(0);
	return date;
}

function beginningOfWeek(presDate){
	if(presDate.getDay() == 0){
		var days_to_monday = 6;
	} else {
		var days_to_monday = presDate.getDay() - 1;
	}
	var beginning = presDate.getTime() - (60 * 60 * 24 * days_to_monday * 1000);
	return new Date(beginning);
}

function endOfWeek(presDate){
	if(presDate.getDay() == 0){
		var days_to_sunday = 0;
	} else {
		var days_to_sunday = 7 - presDate.getDay();
	}
	var end = presDate.getTime() + (60 * 60 * 24 * days_to_sunday * 1000) + ((60 * 60 * 24 * 1 * 1000) - 1000);
	return new Date(end);
}

function fetchAndDisplayWeek(start_time,end_time){

	$.getJSON('/appointments.json',{begintime: start_time, endtime: end_time}, function(data) {
	$.each(data, function(i,app){
		var begintime = new Date(app.begin);
		var endtime = new Date(app.end);
		if(begintime.getUTCDay() == 0){
			var column = 6;
		} else {
			var column = begintime.getUTCDay() - 1;
		}
		var row = begintime.getUTCHours() - start;
		var cell = '.'+ row.toString() + "_" + column.toString();
		var time = formatTime(begintime);
		if(app.patient_id != null){
			if((row < 0) || (row >= (stop-start))){
				return true;
			}
			var name = app.patient.last_name + ", " + app.patient.first_name;
			$("<div/>").addClass("booked").html(time + " <span class='red'>" + name + "</span>").click(function() {
				$.get("/" + locale + "/appointments/"+app.id.toString());
			}).appendTo(cell);
		} else {
			var newend = new Date(begintime.getTime() + (app.split * 60 * 1000));
			if((app.split == null) || (app.split == 0) || (newend >= endtime)){
				if((row < 0) || (row >= (stop-start))){
					return true;
				}
				var div = $("<div/>").addClass("unbooked").html(time + " ").click(function(e) {
					  if((e.target == "[object HTMLTableCellElement]") || (e.target == "[object HTMLDivElement]")){
						$.get("/" + locale + "/appointments/"+app.id.toString());
					}
				}).appendTo(cell);
				$("<a/>").html("<%= t("appointments.book_now").upcase %>").attr({
					"data-remote": true,
					href: "/" + locale + "/appointments/"+app.id.toString()+"/edit?mode=registered"
				}).appendTo(div);
			} else {
				var i = 0;
				var newbegin = new Date(begintime);
				while(newend <= endtime){
					var row = newbegin.getUTCHours() - start;
					if(row >= (stop-start)){
						break;
					} else if(row < 0) {
						i++;
						newbegin = $.advance(newbegin,app.split);
						newend = $.advance(newend,app.split);
						continue;
					}
					var cell = '.'+ row.toString() + "_" + column.toString();
					var time_begin = formatTime(newbegin);
					var time_end = formatTime(newend);
					var date_begin = newbegin.getUTCDate().toString() +"/"+ (newend.getUTCMonth()+1).toString() +"/"+ newbegin.getUTCFullYear().toString();
					var div = $("<div/>").addClass("unbooked").html(time_begin + " ").click(function(e) {
					    if((e.target == "[object HTMLTableCellElement]") || (e.target == "[object HTMLDivElement]")){
					      $.get($(this).children("a:first").attr("href"));
					      return false;
					    }
					 }).appendTo(cell);
					$("<a/>").addClass("hidden").attr({
						"data-remote": true,
						href: "/" + locale + "/appointments/"+app.id.toString() + "?sub_id=" + i.toString()
					}).appendTo(div);
					$("<a/>").html("<%= t("appointments.book_now").upcase %>").attr({
						"data-remote": true,
						href: "/" + locale + "/appointments/new?appointment[begin_time]=" + time_begin + "&appointment[end_time]=" + time_end + "&appointment[date]=" + date_begin
					}).appendTo(div);

					i++;
					newbegin = $.advance(newbegin,app.split);
					newend = $.advance(newend,app.split);

					if((newend > endtime) && (newbegin < endtime)){
						newend = endtime;
					}
				}
			}
		}
	});
  });
  
}

function formatTime(time){
	if(time.getUTCMinutes().toString().length == 1){
		var minutes = "0" + time.getUTCMinutes();
	} else {
		var minutes = time.getUTCMinutes();
	}
	if(time.getUTCHours().toString().length == 1){
		var hours = "0" + time.getUTCHours();
	} else {
		var hours = time.getUTCHours();
	}
	return hours.toString() + ":" + minutes.toString();
}

function setCurrentDate(date){
	currentDate = date;
	setStartStopTime();
	writeCookie("date", date.getTime(), 20 * 365);
	refresh(true);
}

function setStartStopTime(){
	startTime = new Date(currentDate);
	startTime.setUTCHours(start);
	stopTime = new Date(currentDate);
	stopTime.setUTCHours(stop);
}

</script>
<% end %>
<div id='dialog'></div>
<div id="toolbar" class="ui-widget-header ui-corner-all">
    <button id="next"><%= t("appointments.next") %></button>
    <button id="refresh"><%= t("appointments.refresh") %></button>
    <button id="today"><%= t("appointments.today") %></button>
    <span id="weekendcheck" class="right"><%= check_box_tag 'view[weekend]', "1", true %><%= label_tag "view[weekend]", t("appointments.weekend") %></span>
    <span id="dayweek">
      <%= radio_button "view", "dayweek", "day" %><%= label_tag 'view_dayweek_day', t("appointments.day") %>
      <%= radio_button "view", "dayweek", "week", :checked => true %><%= label_tag 'view_dayweek_week', t("appointments.week") %>
    </span>
    <button id="previous"><%= t("appointments.previous") %></button>
    <%= link_to t("appointments.newapp"), new_appointment_path, :remote => true, 
        :class => "newapp", :title => t("appointments.newapp")%>
</div>

<div id="calendar-header"></div>
<div id="calendar-table">
	<div id="slider-range"></div>
	<div id="calendar"></div>
</div>


